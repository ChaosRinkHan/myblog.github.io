<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Seeing inside]]></title>
    <url>%2Fmyblog.github.io%2Fza01%2F</url>
    <content type="text"><![CDATA[六小龄童这个事情，从一开始我就觉得挺不好的。 用来打他的言论，所谓招黑的言论，我觉得没问题。也就是我觉得他说的挺对的。 一千个观众心中只有一个美猴王 他们说什么做什么 但是他们算什么 没人有权利拿他的标准衡量我 要去评价他，大众可能现在都觉得他的确值得黑。 这是道德问题吗？ 如果你演猴戏还是个大拿，你说，他演的不好，完全没问题。 在我心中就只有这一个孙悟空。 悼念词上宣传新片，如果能看完整段话，那还是首尾呼应的：继续创造一个『 』形象献给导演和观众。这是不合情理的事情，但这不是不道德的事情，也不是有损导演本人的事情。 众多资料提到或暗示，他和导演有『一点』过节。但是凡事都要听两方面，这种争执是不能定性一个人的，何况现在导演已经走了。 如果能总结出他艺德有问题，那我还能同意；艺德有问题不影响艺术创作，他演的美猴王的确演的好。 艺德有问题的人很多，但不阻碍他们创造艺术作品。众多殿堂大师，有兴趣的可以去统计下，且不说有争议的伟人了。 如果你觉得他不尊重导演不尊重他人，那么恶搞、诋毁他只能证明你也是一个不尊重人的人。 在我的眼神里头就是人和妖的问题 戏说不是胡说，改编不是乱编 有人说他活在过去的辉煌。 但活法是他的事情。他选择依靠美猴王赚钱，损害了大家的利益吗？ 西游记、孙悟空已经成了他贯穿一生的主题。你可以说他弘扬传统文化，将猴戏发扬光大，也可以说他吃老本骗钱，只是角度问题。 金钱力量最大却生不带来死不带走，紧握着双拳的人们何时才能松开手 以下是强烈个人观点。 孙悟空相关的各种『改编』真的就是乱编。大话西游，在我看来就是玷污名著。 这是跳出了框架的编剧，是只借了西游记IP的狗血剧情故事。我觉得他的评价完全没有问题。如果亲身演过孙悟空，亲自导过西游记，不难和他有同样地观点。的确是恶搞。 对普通人的叫做网络暴力，对名人的不叫前几天在B站看到一个引起了我深思的评论，是关于用微小微的舞蹈视频拼接的“改革春风吹满地”，投稿在鬼畜区的事情。这条评论说道： 获得微小微授权了吗？ 有人反驳，那么多鬼畜视频，都获得他们授权了吗？李云龙授权了吗？ 微小微有B站账户，有她自己的视频，就需要授权 我陷入了沉思。 各位觉得呢？ 你可以做视频骂一个人，但是那是个人行为，并且该视频是一个不值得推荐的具有攻击性质的视频。 55开开挂，现在还有上香视频，我觉得这也算网络暴力了。他自作自受需要你们去惩罚他吗？网络上面的社会学和舆情真的很有意思。当年的校园暴力，伴随整个学习生涯的侮辱性的外号，不就是本性原始的模样吗？ 就像你在学校里面作弊了被千夫所指，你接下来的日子不断承受老师同学无情羞辱和嘲讽或是每句聊天都夹杂的暗示，最后社会会塑造一个什么样的人？ 现在发表言论很方便，所以看清楚一个人也很方便。 他这样的人太多了，就他成了造梗的狂欢，被疯狂消费。 暴力都是一个源头，网络暴力，校园暴力，都是值得深刻反省的，什么样的环境会造就什么样的人。 我没说对六小龄童的调侃是网络暴力，我也不确定。 Judge or not, 是能从和一个人聊天中前两句就能听出来的。 就好像大家觉得骂他能代表我们是理智人一样。]]></content>
      <tags>
        <tag>Thoughts</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Collection of 2018]]></title>
    <url>%2Fmyblog.github.io%2Fphotocollection2018%2F</url>
    <content type="text"><![CDATA[2018/3/10 @奉贤海湾 图中的人不是我 2018/4/21 @槟城 升旗山俯瞰槟城 2018/5/2 @奉贤海湾 日出 2018/5/19 @苏州 园林 2018/6/3 @宏村 夜景 2018/6/18 @学校 夜景 2018/8/8 @深山 银河 2018/8/31 @家 Dusk 2018/9/29 @海边 2018/11/23 @圣诞市场 2018/12/16 @Titanic Belfast 简单的几何学 2018/12/19 @伦敦]]></content>
      <tags>
        <tag>Trip</tag>
        <tag>Photograph</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Photos of London]]></title>
    <url>%2Fmyblog.github.io%2Fatriptolondon%2F</url>
    <content type="text"><![CDATA[King’s Cross f/2.8 1/20s ISO 320 +Extinc 2018/12/18 18:06 摄于国王十字车站一出口。站内还有青烟。 只进行了简单调色 Way Out f/2.5 1/20s ISO 125 2018/12/18 18:17 摄于某地铁站出口。 分离色调：阴影偏蓝，低饱和度，高光和中间调相反方向，低饱和度 对比度+25，饱和度-91，冲击-37，渐晕-0.37 St Paul’s Cathedral f/3.2 1/400s ISO 125 2018/12/19 11:17 摄于St Paul’s Cathedral。同时这个位置非常适合行动延时，由于两侧均有参考建筑使用Pr处理消除抖动效果非常好，B站有教程。适合低畸变广角镜。 畸变矫正：垂直+42，数量94，方向21 色调与上一张类似，参考Capture One预设：Turquoise Shading 曝光+0.9，对比度-16，饱和度-60，自然+25 故意欠曝获得天空颜色。黑卡高光还原确实不咋样，光圈优先下很多时候大光比和阴天天空都会过曝。 Millennium Bridge f/1.8 1/1000s ISO 125 +CPL 500 2018/12/19 11:45 千禧桥向教堂望去。 色调：参考Capture One预设：Turquoise Shading f/2.8 1/400s ISO 125 +CPL 500 2018/12/19 11:46 色调是手动扳的曲线 Tower Bridge 图一有作堆栈的原图中抓拍到的一只海鸥(?)。图二为多张堆栈的塔桥，水面雾化效果不理想。 Underground Nightscape 多张堆栈。机位在一座铁桥上，长时曝光不大可能，只能采用堆栈后期合成。 Swan 摄于海德公园]]></content>
      <tags>
        <tag>Trip</tag>
        <tag>Photograph</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[茫茫，Formula 1 (二)]]></title>
    <url>%2Fmyblog.github.io%2Fthoughtsaboutf1%2F</url>
    <content type="text"><![CDATA[前文地址 (茫茫， Formular 1) 引前一次写F1相关话题的时候是在13年。当时看了红牛内斗有感而发，加上最喜欢的车手韦伯机长退役。现在五年过去了，14年开始混动时代来临，谁都想不到这五年全部被银箭垄断了。 五年前机械轰鸣更加纯粹，银箭还叫梅赛德斯AMG。 梅赛德斯-奔驰（或是叫梅赛德斯AMG？），同迈凯轮一样，在一二线车队间游走。简森巴顿、汉密尔顿、罗斯伯格、佩雷兹都很有潜力，但都被压制了。送走舒马赫，梅赛德斯的积分说明了它的稳定。 神莲也分家了——路特斯还是莲花？车手无疑是神莲的优势，而且其“硬件”也不错。其长期保持的一二线间的位置更有利于向领奖台冲击——我还是挺支持神莲的。 威廉姆斯无疑是一个悲剧。教授时代的威廉姆斯车队风光无限屡登宝座无人能拦。如今虎落平阳，只有偶尔在事故画面和最后几圈被套圈的让车镜头中看到威廉姆斯了——这样坚持一定很辛苦。 其他的诸如索伯、印度力量、红牛二队也没什么了。不得不说日系主力本田退出F1，小林可梦伟的离开是让人伤心的——街车漂移之都的企业家也无心经营F1了，虽明年本田将以发动机提供商回归。 车队这五年虽说梅奔统治了，但是车队水平和阵容还是变化非常大的。梅奔的崛起离不开高研发投入，可能梅奔突然了要搞研发了(舒马赫，巴顿在的时候在混脸熟吗)。 不得不说历史总是惊人的相似。前面红牛统治的时候，维特尔和韦伯队内斗白热化，韦伯被迫退出了。现在梅奔统治前三年间罗斯伯格的实力已经能和汉密尔顿拼年度冠军的时候，罗斯伯格激流勇退当了名宿。在车队里面，一号车手和二号车手的区分永远是焦点问题。汉密尔顿就此等来了最强wingman博塔斯。 路特斯车队亏钱跑了，威廉姆斯车队一直在地球组的二三线挣扎。索伯发挥不稳定(主要是车手原因)，小红牛已经变成青训队了。还有个解散后换了老板的赛点力量(印度力量)还能稳定地拿分，很大程度上也因为有传奇人物佩大师和稳定小将奥康。迈凯轮就比较悲哀了，啥都盼望不上，头哥开了会儿养老车就走了。 雷诺有还算一个成功的回归，车手也是特别有特点的中游车手。雷诺的引擎今年可是伤透了红牛的心，明年又有什么新的争纷就坐等了。 奥康和范都恩没有席位]]></content>
      <tags>
        <tag>Cars</tag>
        <tag>Thoughts</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[科技以换壳为本]]></title>
    <url>%2Fmyblog.github.io%2Ftheshelloftech%2F</url>
    <content type="text"><![CDATA[科技以换壳为本。 十年前乔老爷子从信封里面拿出来了MacBook Air，多少人激动得热泪盈眶。十年前啊。你现在的电脑能放进信封吗。 然后他告诉你，手机是可以触摸的。还有平板电脑这种产品。 对十年前，现在的技术先进很多倍。但是很少有发布会，能让我们真正“哇”出来的，甚至是苹果自己和谷歌的发布会。我们需要的的确是更强大更好用的产品，但是十年前，十五年前，它就是这样了。所以它们发展到极致也就是那样。 真正能让人“哇”出来的，是那些打破界限，打破思维定式的创新，而不是隐藏刘海这些误入歧途的创新。 科技以换壳为本产品一旦定义好，就像一个画板被固定好了。我们不管怎么放飞自我地创意都限制在了这块画板上。 假如你有点东西，你想造一个新画板。但是面对高度发达的电子产品行业，要么你造的东西太边缘化，例如现在结合互联网的各种硬件。确实发明的好，解决了某些痛点。但是它只会是一个补充品。就算电话手表做的再好，它也不会代替电话的。 要么就是不伦不类的画板，没人理你。例如很多龙头提出的行业标准，出现的风靡一时但很快被埋没的产品。 所以就这块画板，大家各自发挥了。 是不是无边框的新iPad很惊艳？其实安卓平板几年前就做成这样了。在这个画板上，你做出什么东西都不会让我惊讶。就拿手机说。一旦你觉得手机就是砖头这样的，那么它再花的花样都不会出人意料。屏幕有前面的，前后都有的，还有智窗的，还有墨水的，还有异形的现在正在流行。摄像头现在也玩得出花样。但是就是拿出十个摄像头的手机给我看，我可能就觉得“哦”，就那样。还有折叠手机，滑盖手机。十几年前的新意也比较流行。 可是它们都是手机，或者说都是智能手机。 在乔布斯告诉人们iPhone之前所有的手机都是手机。那个时候所有的手机就像现在的智能手机一样，玩不出花样了就在键盘、屏幕、滑盖、翻盖上面下文章。 那个时候，你再怎么旋转翻盖，360度翻盖，全键盘，都只能稍稍引起人们的兴趣，或者说市场的兴趣。 可是智能手机一出来，它们就基本都消失了。 科技就是科学与技术吗我小时候拿到过一个三星的直板手机。屏占比不比现在的索尼低。之前用的都是九键的手机。 那时候能真切的感受的科技的震撼。一整块屏幕，Windows Mobile系统。可以像电脑一样操作。可以像电脑一样，从浏览器直接下游戏装在系统里。那个时候我才小学毕业，对这个世界上还有这么好玩的东西惊呆了。模拟飞行的游戏，全3D。我玩着游戏会想，既然这个东西能玩这么好玩的游戏，那么它也能做出无限可能的事情。只要有人愿意编程去做，这个东西可以用在各行各业。还可以用手指直接操作。 再一次真实感受到科技的震撼是我爸买了iPhone 4。在这期间也就是我初中的时候智能手机爆炸式发展。前前后后塞班系统，Windows Mobile 6.5， Windows Phone 7我都用了。Windows Phone 7我是用的最多的。它基本上就是当时手机的完全体了，生态也还是日中的时候。那个黑白的QQ软件，磁贴界面承载了我太多的回忆。当时在手机上写日记。 这些东西和iPhone 4的关系在于，这些手机的屏幕都还不错。平常也不会去在意显示质量。直到我看到了iPhone 4。那个屏幕之清楚惊呆了我。取下眼镜贴着屏幕看，基本看不到像素点。我记得当时iOS的默认壁纸是大海。我盯着大海看。那个图就像贴在手机上一样，完全没有一点瑕疵；再看以前的手机，肉眼都能看到像素点之间的黑色空隙。第一代retina屏幕。 接着我买了一个iPod touch 4。当时最先进的游戏机，App Store还有着10万app（现在已经几千万了吧）。六发左轮，生死九毫米，N.O.V.A.，浴火银河2。我很高兴我玩过了这些好游戏。那时候玩的真的很开心，很简单的那种快乐。那时候才是玩游戏的感觉。6毫米的厚度，体感操作飞船和射击瞄准，3D音效。 后来我玩了很多游戏。无论是AAA大作还是精致的小游戏，都没有最初玩生死九毫米和浴火银河2时的那种快乐了。 后来我也用了很多手机。从安卓1.8用到9.0，从iOS 4.3用到12.1，从Windo Phone 7.0用到Windows 10 Mobile。系统不断进化，硬件也更加先进。 可是我再也没有感觉到科技的震撼了。 界限就在那，每个人都知道现在可以说是是创新最好的时代。也可以说是创新最坏的时代。我们都在想，下一个时代的电子设备究竟是什么样。 也或许我们想的很多，因为说不定地球撑不到下个时代了。 现在的科技生活，定义在生态和手机、电脑上面。下一个时代，定义在什么上面，可能需要各位来给出答案了。 我觉得可能定义在云上。没错就是云盘那个云。可能你走到哪里都只需要带上你这个人，就能获知一切了。可能桌面或者墙面就可以直接操作，建立在云上的算力非常强大，不需要你带着电脑，或者不需要个人电脑了。无论在哪里只需要你人在就能进入属于你的操作系统账户开始干嘛都行。你的个人文件和生产力工具都在上面。如果你实在需要一个硬件来办公，那可能就一个键盘。其实键盘也不需要，因为可以用脑电波直接控制文字输入[^1]，光标用眼睛控制就好了。甚至可能那时候交互方式完全变了，完全不用这些输入设备了。 全无线，因为也没有硬件需要连接了。 或者说随处都有可用的计算机，比如桌子或者墙，或者是一个随身携带的投影小方盒。只需你这个人作为钥匙就能开启。 现在的技术就已经完全能达到这个水平了，可是没有谁做得出来，没有谁愿意做。 索尼的Xperia Touch就是一个非常大胆的尝试。 大众的舒适区已经停留在了拿着手机大拇指和食指滑动，双手拇指打字了。想要改变需要的不只有开山的工具。 [^1]: Jarosiewicz B, Sarma A A, Bacher D, et al. Virtual typing by people with tetraplegia using a self-calibrating intracortical brain-computer interface[J]. Science translational medicine, 2015, 7(313): 313ra179-313ra179.]]></content>
      <tags>
        <tag>Thoughts</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[简单谈谈RX100上面的这颗24-70镜头]]></title>
    <url>%2Fmyblog.github.io%2Frx100-24-70%2F</url>
    <content type="text"><![CDATA[总体感受整体焦段：由于镜头结构和两段式的电动变焦结构，整个焦段表现都没有出现翻车的情况，靠近70端改变了变焦结构保证70的非球面成像质量，不过实际体验下来70端除非特殊要求还真的少用比较好，因为70端的光圈和边缘画质非常不稳定，吃光线非常厉害，室内用70段经常ISO乱飙手动压下来。 这颗不可更换的镜头成像质量根据测评这三代都没有什么改进（参考DxO天梯），但是素质还是属于较强水平，已经是超越1英寸的存在了（不然凭什么卖这么贵）。除开色准（人像没拍算了）和高光还原有点祖传外还是日常类型基本cover了。 从后期容量感受下来就是高感噪点和天空锐度（很难还原）有点难以接受，对比上手的尼康残幅和全幅，虽然不是吊打，但水平也就他们的40%左右，虽然说后期基本看后背，但是这颗镜头在这两方面对画质加成非常有限。 让人崩溃的云层和天空成像：颗粒化很明显 24端最容易提到的就是广角端不够广了。小底+广角，畸变校准基本上50mm以下都有需要。几大软件都包含这颗镜头的配置文件，加上XY轴矫正基本能达到能看水平，对于喜欢拍建筑和近景静物的人来说可能后期矫正和裁幅得习惯一段时间。 修正下的建筑——建筑的尖顶已经裁减没了]]></content>
      <tags>
        <tag>Photograph</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[机器学习 李宏毅 笔记]]></title>
    <url>%2Fmyblog.github.io%2FMLNotes%2F</url>
    <content type="text"><![CDATA[Intro Supervised Learning: 需要大量training data Structured Learning: 输出具有结构的结果，例如语句 Lecture 1: Regression - Case Study Regression: 输出是一个scalar 妙蛙种子cp值的例子 对可微分的f，可以用梯度下降法解最优（另：这可以直接最小二乘求最优）： 单参数做法： 双参数做法： 如此迭代 黄色：f的梯度方向 担心：初始值选取不同可能会陷入不同的鞍点（此时可能只到达局部最优） 在线行回归中不必考虑，因为Loss Function是convex的 后面讲拟合的误差，以及模型不同导致的拟合误差差异： 圆圈代表了模型的空间，模型次数越高，空间越大但误差也越大 所以要选择合适的Model： 再考虑物种的情况，加入Xs。预测与决策的内容（4-5: 含虚变量的回归）Xs相当于一个决定截距的虚变量 本节的话除了思想，基本都是很基本的知识. Regularition 确定Loss function时，除开error项（第一项），往往加上第二项，这样确定下来的拟合函数系数可以尽量小，函数也会更加平滑： λ的选取： 合适即可 总结： Demo：演示了梯度下降法逼近最优解的过程 Lecture 2: Error来源 - Model选取数据误差的构成： 表现在Loss Function函数上： 1: 分布较为集中（方差小），但是距离f hat还是有距离，偏差较大 = 代表简单的Model 2: 分布散乱（方差大），但是偏差小 = 代表复杂的Model 蓝色圈：最初选定的Model set集合。例如，采用一次回归注定了这个set的偏差较大 随着模型次数增加，偏差会越来越小（瞄得越来越准），但是分布会更加散乱 同时考虑的时候，可以得到蓝色的线，采取最合适的点代表的模型 如何减小误差对Bias：• Add more features as input • A more complex model 简单来讲就是换个好点的模型 对Var： · 更多的训练数据 · 采用规范化（加上 λ（w𝙞）^2 项） 模型的选择上的问题： 不应该：用手上已有的Testing Set去评价model好坏，因为真正的Testing Set全集是我们不具有的，真正的set下评价可能会不同 通过交叉验证确定最优Model 两个Demo： 1：表明局部最优和全局最优的关系 2：表明采用梯度下降法，说明存在f会不降反增的case]]></content>
      <tags>
        <tag>机器学习</tag>
        <tag>Notes</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JetBrains学生免费版申请指南]]></title>
    <url>%2Fmyblog.github.io%2FJetBrainsCount%2F</url>
    <content type="text"><![CDATA[JetBrains它很多评价较好的IDE和工具： CLion，PyCharm相信用的不少吧。谁是最强IDE就不争了，反正都算一流的。 学生免费使用随便选一个收费IDE，比如CLion，选择Buy： 右上选择DISCOUNTE…这个Tab： 选第一项，对教师和学生免费，然后Apply Now； 第一种：使用学校邮箱（我学校邮箱GG了就没用） 第二种：使用ISIC/ITIC（没有） 第三种：只用正式文件： 根据学校信息填好表，我上传了三张图片作为文件： 学生证封面 学生证信息页 学生证注册页 然后在comment栏里面填写对应的解释（用英语写一下就好了） 然后Apply，等待邮件，一周之内处理完成。 我申请后两天就出来了： 选择Link your free license, 将免费的这个激活状态绑定到已有账号或是创建的新账号上面。然后就可以下载软件，登陆账户就可用了。]]></content>
  </entry>
  <entry>
    <title><![CDATA[机器学习 李宏毅 HW]]></title>
    <url>%2Fmyblog.github.io%2FMLHW%2F</url>
    <content type="text"><![CDATA[HW0 Q1123456789101112131415161718192021f = open('data.txt')readline=f.readlines()for line in readline: line = line.replace(',', ' ') line = line.replace('.', ' ') line = line.strip() allWord = line.split(' ')##print(line)wordCount = []wordDict = &#123;&#125;.fromkeys(allWord)wordList = list(wordDict.keys())cnt = 0for i in wordList: wordDict[i] = allWord.count(i) print(i + ' ' + str(cnt) + ' ' + str(wordDict[i])) cnt = cnt+1##print(wordDict) Sample input: data.txt12data.txt:A small sample of texts from Project Gutenberg appears in the corpus collection. However, you may be interested in analyzing other texts from Project Gutenberg. You can browse the catalog of 25,000 free online books at xxx, and obtain a URL to an ASCII text file. Although 90% of the texts in Project Gutenberg are in English, it includes material in over 50 other languages. Sample output123456789101112A 0 1small 1 1sample 2 1of 3 3texts 4 3from 5 2Project 6 3Gutenberg 7 3appears 8 1in 9 5the 10 3... 打开文件后读取所有的字符，用 replace 去除符号后用split将字符串分割成list 然后用字典方法去重。在wordList中记录单词和出现次数（key为单词，value为出现次数） 最后输出 Q2 图片淡化1234567891011121314151617from PIL import ImageoriImg = Image.open("westbrook.jpg")pixel = oriImg.load()##print(oriImg.size)##(a, b) = oriImg.sizeprint((a, b))for x in range(oriImg.size[0]): for y in range(oriImg.size[1]): ##print(x, y) (r ,g, b) = pixel[x, y] #print((r, g, b)) ##print((int(r/2), int(g/2), int(b/2))) oriImg.putpixel((x, y), (int(r/2), int(g/2), int(b/2))) ##oriImg.putpixel((x, y), (100,100,100))oriImg.save("new.jpg") 原图片： 减淡后： 遍历图片，putpixel即可。]]></content>
      <tags>
        <tag>Python</tag>
        <tag>机器学习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于赛车]]></title>
    <url>%2Fmyblog.github.io%2FAbout-Racing-Cars%2F</url>
    <content type="text"><![CDATA[前言FIA旗下最大的三个汽车运动赛事：F1，WEC，WRC。国际摩联旗下还有著名的moto GP。我今年开始看的汽车运动赛事越来越多。也是对汽车运动越来越有兴趣。在看的有F1，F2，WEC，看得少的有moto GP，戴那通，纳斯卡。 F1F1圈内的事情就不谈了，新闻很多了。F1自从被自由媒体买了之后就开始有点变味。虽然说的是为了观众为了收视，但是我觉得背后更多的是为了商业运作。伯尼走了之后F1的商业模式目前各方都不敢下注，毕竟把这么大个F1盘活本来就不容易。对我们观众来讲，感受就是HUD变得更加详细，动画挺好，数据有点意思，字体挺好看。从今年开始看了F1的都能感受到这个HUD慢慢完善的过程。最早阿尔伯特公园站的时候还有很多bug，甚至直接没上HUD。现在已经很完善了，甚至还有大牙过生日的提示。自由媒体加上人字拖（Halo）就是非常激进的举动了。虽然说安全第一，但我想车迷都更期望看到更好的解决方案，特别是不要在中间加上那个竖杠。由于F1的影响力，F2，FE都开始使用人字拖，并且各大模拟器和游戏也跟上潮流加入了人字拖。从今年整体趋势来看，法拉利能拿到好成绩甚至冲击冠亚军给今年比赛带来不少看点。其实到现在汉密尔顿在梅赛德斯-奔驰车队破了多少记录都没什么意义了，因为梅奔是空前地快，这么四五年都开最好的车，是历史上都没有的事情。虽然梅奔投入巨大，但是我还是希望看到引擎地差异越来越小，车手和策略因素影响越来越大。如阿隆索所说，在直道上差80匹马力，就算你开了DRS也会追不上没开DRS的奔驰。迈凯伦的今年是跌到谷底剧变的一年。之前车队高层变动就不评论了，懂的都懂。换了引擎也没什么用，同样是雷诺引擎，追不上红牛也追不上雷诺厂队。所以只能是空气动力的原因了。这个研发太水了。头哥这两年赚了天价酬金之后很可能就会离开F1了，最近几站在排位赛就开始绝望地抱怨：我没有轮胎，在弯道缺少动力。我不知道继续比赛还有什么意义。 F2 &amp; FE]]></content>
      <tags>
        <tag>Cars</tag>
        <tag>Thoughts</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[整理和收纳]]></title>
    <url>%2Fmyblog.github.io%2F%E6%95%B4%E7%90%86%E5%92%8C%E6%94%B6%E7%BA%B3%2F</url>
    <content type="text"><![CDATA[Google的生态可以说是已经很棒了。上次I/O大会的新奇现在已经可以感受了。 Gmail邮箱全新改版的Gmail设计风格更加简明，突出重点，同时在列表显示了]]></content>
      <tags>
        <tag>Geek</tag>
        <tag>Google</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[屏幕杂谈]]></title>
    <url>%2Fmyblog.github.io%2F%E5%B1%8F%E5%B9%95%E6%9D%82%E8%B0%88%2F</url>
    <content type="text"><![CDATA[8102年了，供应链的控制能力还是决定厂商核心产品的因素。 之前的发刘海屏都还不敢吹嘘咋样咋样，华为p20这次发布会上把隐藏刘海当作一个“特性”还要拿出来讲…我接触的人大多数都不喜欢刘海吧。不管是审美上还是功能上。iOS刘海没什么，虽然那么多UI元素被压缩在角落瑟瑟发抖，但是苹果是龙头，叫你适配你就必须适配，不然就下架app。安卓就不一样，各家自己做ROM，但是国际大厂都没有采用刘海屏，也没用魔改ROM来适配。所以今年就很神奇了。国产机旗舰发基本全部是刘海+下巴。 我觉得你留下巴不如把额头也留出来吧，强迫症看着舒服点，顺便也不用去想摄像头和传感器听筒放在哪里了。这怪谁呢，我觉得怪iPhone X出来之后那些急于模仿的厂商，定制了屏幕，后来之后的厂商都没有号召力叫供应商去重新下模。mix 2s和坚果R1这些只有下巴都用的早就有的IPS，IPS做不了无下巴，而且边缘做不了处理。别的刘海用的OLED真的属于瞎眼+跟风了，看p20你们真的觉得美吗？我觉得还不如有额头的版本漂亮。要想拿到无下巴的iPhone X那样的OLED刘海屏我觉得今年可能不行，至少Q3之前不行。第一，三星不同意，第二，三星也没产能来做这么多屏幕，第三像JDI和LG这些准一流的厂要做可能也要时间，更重要的是要钱。我觉得可能OPPO都拿不到。但是还有HTC的SLCD这些邪教，做出来看u12效果了。真正的全面屏其实并不是手机公司能决定的，而是屏幕的研发进度决定的。 刚刚泄漏的Android P 截图显示，Pixel 3可能采用真正的全面屏，无刘海无下巴。 我觉得这才叫全面屏吧。htc团队做出来的pixel 2屏占比本来就不低，不知道Google会用哪家的黑科技。苹果这个刘海设计估计会形成系列了，有解读三星的最新广告片暗示iPhone SE2采用的是4寸刘海。其实高冷一点的厂商根本不在乎什么鬼玩意刘海屏，处在浪尖的东西都不考虑的，我们不缺钱。]]></content>
      <tags>
        <tag>Thoughts</tag>
        <tag>Phone</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一周图片——May 13 2018]]></title>
    <url>%2Fmyblog.github.io%2F%E4%B8%80%E5%91%A8%E5%9B%BE%E7%89%87%E2%80%94%E2%80%94May-13-2018%2F</url>
    <content type="text"><![CDATA[Astonish Sunrise 500px原图页面8.8mm ƒ/8 5s ISO 1002018 5/3 4:43一周前破晓时分在海湾拍的。这是延时摄影中的一帧，完整延时视频。人眼感觉其实比这个加强了饱和度和对比度的照片更震撼。人眼宽容度是真的强。从地平线到头顶，是烟红-紫-粉-橙-黄-蓝-黑的渐变。F8下左侧的路灯出乎意料的拍出了星芒。海边正在布置防浪，还有个挖掘机停着。 Snow &amp; Lights 500px原图页面8.82mm ƒ/3.2 1/4s ISO 12502018 1/25 17:49冬天在学校，遇到下暴雪去拍的。闪光灯拍出来的雪点非常亮而且不透明。当时拍了一个vlog(需要科学上网) Campus Night 500px原图页面8.8mm ƒ/4 20s ISO 2502018 4/17 0:40隔着镜湖，图书馆20s长曝。26mm f/2.8 1/3200s ISO 64002018 1/24 21:07还没熄灯的图书馆]]></content>
      <tags>
        <tag>Trip</tag>
        <tag>Photograph</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[吉隆坡——大都会]]></title>
    <url>%2Fmyblog.github.io%2F%E5%90%89%E9%9A%86%E5%9D%A1%E2%80%94%E2%80%94%E9%83%BD%E4%BC%9A%E4%B8%8E%E5%AE%97%E6%95%99%2F</url>
    <content type="text"><![CDATA[两天之前在雪邦的吉隆坡机场直接转机去了槟城，现在回到了马来西亚的都会。现代化和传统、宗教在这里似乎并不矛盾。同槟城一样，它的包容性也同样让人印象深刻。 Day 1上午坐AEROLINE的豪华大巴从槟城到吉隆坡，差不多是是市区到市区，节约了往返机场的时间（毕竟雪邦机场距离吉隆坡市区 50km+）。 这个豪华大巴虽然要四个小时多，但是坐上去还是非常舒适的，大概是飞机公务舱的水平，车上还有娱乐系统。全程高速。 到达的地方距离KLCC（双子塔）非常近了。去双子塔旁边的购物中心Avenue K换了点现金，又吃了家推荐的日本拉面，从（长沙）东京空运而来。 购物广场门口的430 打车沿途看到的KLCC 从酒店顶层能看到市区和KLCC 有趣的阀门 休息了会儿就去今天的景点了。 茨厂街周边街道。摩托车总是会挤到前面 刚走不远就遇到了雷暴，在一个银行门口站了一个小时才走 市区内KJL轻轨挺方便，KLCC和茨厂街附近都能到。 马里安曼印度庙 脱鞋才能进入，地还没干就放弃了。 茨厂街附近的 日落 茨厂街。名义上是唐人街，实际上卖的全是仿制名牌和各种小吃。这里可以买点纪念品。 茨厂街周边转完就能感受到这个国家的 多元 了。下轻轨能看到清真寺和河岸上的pop涂鸦，走不远有印度庙，有唐人街还有寺庙。查了下，60年代的骚乱过后马来西亚的各族都友好相处。正逢大选，我也看到了各个族的党派。这里不会出现了因为一个种族人口太少而被边缘化和排斥的情况，因为这里主要人口本生就是马来族、华族和印度族组成的，任何人种都能在这里享受到公正的对待。一条街上可能就有好几种风格的建筑，有好几种肤色的人居住在这里。这在中国是见不到的。 KLCC坐轻轨到KLCC，赶到了九点的音乐喷泉表演，持续了十分钟左右。这个音乐喷泉不算大，甚至比不上国内一些二线城市的喷泉。 KLCC 在很多人心中这就是吉隆坡的象征吧。拍照时，恰好月亮在塔中间。可能很多人只以为这就是现代的摩天大楼，然而： 这座美轮美奂的特出建筑物的建筑理念是由伊斯兰 5 大支柱思想所激发而来的 。它是吉隆坡市政中心 KLCC 范围内，最经典的一座超现代的建筑物。整栋大楼的格局采用传统回教建筑常见的几何造型 ，包含了四方形和圆形。吉隆坡国油双峰塔是马来西亚石油公司的综合办公大楼，也是游客从云端俯视吉隆坡的好地方。双峰塔的设计风格体现了吉隆坡这座城市年轻、中庸、现代化的城市个性，突出了标志性景观设计的独特性理念。 附近的skyscrapers 双子塔貌似是马石油的，附近广告也非常多。这是在下地铁时拍的，拍糊了却很有感觉。有哪些拍虚了但竟然很好看的照片？ 回程天桥拍了点夜景 Day 2国家清真寺 &amp; 老火车站国家清真寺这是个吉隆坡必打卡的景点。游客侧门进，有免费提供袍子。 百度：伊斯兰教是马来西亚的国教，清真寺遍布全国，吉隆坡市中心的国家清真寺，占地5.5公顷，于1965年建成，这是一组包括祈祷大厅、大尖塔、陵墓和办公大楼的建筑群，其造型和装饰与麦加的三大清真寺相仿，气势恢弘，是伊斯兰建筑艺术的杰出代表半个世纪神圣的矗立却渗透了这个国家百年的历史，也融合了现代与传统，是伊斯兰建筑的代表，以现代方式去阐述传统的伊斯兰璀璨的文化艺术，新颖而奇妙 个人来讲，最大的感觉就是这座建筑非常的现代化，和想象之中古老的清真寺大不相同。然而刚刚查询到居然1965年就落成了，放到今天也能感受到它 超越时代的建筑风格的张力。 能窥到吉隆坡塔 老火车站 吉隆坡火车站建于1910年，于1986年时进行过一次大整修，目前是KTM电动火车的车站，为旅客提供最为现代化的设施和旅客服务。吉隆坡火车站就像一座幽静的城堡，是世界上独一无二的仿真清真寺火车站，被誉为世界最美的火车站，吉隆坡火车站与国家清真寺相邻，受摩尔建筑风格的影响，带有浓郁的历史色彩。火车站融合了维多利亚宫殿格局及摩尔拱柱圆顶风格，有如文艺文艺复兴时代的别墅一般。这座有些念头的火车站，站外有参天大树围绕，站内是呗穑穹顶的回旋楼梯，几何形状的柱廊，给人似曾相识的感觉，一时间仿佛走进了伊斯兰的纯粹世界，无论从哪个角度看都有一种视觉上的冲击感。 据说屋顶张合的伞状突起代表了马来西亚的气候 独立广场周边城市长廊，门票不贵，值得一去。里面有沿革介绍，建筑模型，打卡拍照的地方，还有很炫的城市灯光秀。 里面的建筑模型和艺术作品 灯光秀的大展台。灯光秀我录了视频，照片展现不了。 这个展馆的二楼表达了一个观念：吉隆坡的 skyscraper计划。从这个规划模型来看，吉隆坡确实很喜欢摩天大楼。将来这里摩天大楼将连成一片，密度之高。 中途会酒店退房顺便去吃了推荐的万利肉骨茶。很有盐味，作为一个四川人吃得开。几十年老店，秘方中药材汤底。 回到独立广场继续逛 1957年8月30日午夜，英国国旗在此降下，马来西亚国旗首次升起。广场的南端有一个95米高的旗杆，在世界上最高的旗杆之一。此后，每年8月31日的国庆游行在此举行。 广场上人观光的人不算多。草坪是挺大的，就是维护差了点劲。 苏丹阿都沙末大厦 苏丹阿卜杜勒·沙马德大厦俯瞰独立广场，是由英国建造的最显著的地标之一。设计灵感来自印度的莫卧儿建筑，完成于1897年，雪兰莪州秘书处设此，后来改为最高法院。荒废多年后，现在为遗产，文化和艺术部所在地。 嘉美克清真寺最后一个景点了。这里男士进入需要穿一个裙子一样的东西，女士需要租罩袍。这里真的很漂亮，很适合拍照，虽然很小，非教徒能逛的地方很少。异域风情+热带植物+宗教装饰 溜了迎着日落，坐上了去国际机场的大巴 这次全程自己规划的四天旅行也完了。有些东西只有出国了才能体验到，就像马来西亚的风情和它的多元。这里值得来第二次。]]></content>
      <tags>
        <tag>Trip</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Thought stays upon the Penang Hill]]></title>
    <url>%2Fmyblog.github.io%2FThought-stays-upon-the-Penang-Hill%2F</url>
    <content type="text"><![CDATA[无题 今天(4/20)在升旗山看到一个妹子 念念不忘她是本地人 身材很不错 穿的热裤 应该是和同学一些来玩的先是站着 后来盘腿坐着 腿好好看我在观景台坐在地上等日落她也和同学在那里坐着 连续换了几次坐的地方 每次都靠我更近 但是都是为了方便游客来那里的空位拍照我都没说过话和她其实都很近了 始终没有勇气是不是有勇气一切都会改变呢 景色很好，俯瞰槟城全境。有人问了下那是什么大桥 她说 是槟威大桥 用的普通话 估计也是热情开朗的一个妹子吧 一会儿那人走了 她闲着和同伴们说他们是台湾人吧她的粤语真的很好听我们其实是大陆来的 念念不忘真希望能找到她]]></content>
      <tags>
        <tag>Thoughts</tag>
        <tag>Trip</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[槟城——南洋遗产]]></title>
    <url>%2Fmyblog.github.io%2F%E6%A7%9F%E5%9F%8E%E2%80%94%E2%80%94%E5%8D%97%E6%B4%8B%E9%81%97%E4%BA%A7%2F</url>
    <content type="text"><![CDATA[Day 1第一天根据天气和时间来看只有下午晚上可以去玩一下，就安排了极乐寺和升旗山两个地方。晚上逛一逛就休息了。 热带的云 极乐寺 &amp; 升旗山这两个景点隔着就两三公里，但是走路加上上下坡挺累的。交通 的话机场到光大（Komtar，槟城地标）十多公里，光大到极乐寺和升旗山也就8，9公里，打车过去不超过半小时，极乐寺到升旗山打车过去也就几分钟。两个景点相隔很近，所以可以一次去了。 wiki: 槟城极乐寺 是一座位于马来西亚槟城州亚依淡的佛教寺庙。极乐寺始建于1891年并于1904年全面竣工，寺庙依山傍海，占地120,000平方米，为该国乃至东南亚规模最大与建筑最宏伟的华人佛寺。该寺名称取自“西方极乐世界，其落成标志着汉传佛教伽蓝在南洋的开拓，是汉土与海外华人间的文化纽带。 万佛塔 修在山上，还是有点高度，能看到市区（George Town）错落的建筑 沿途下来很多卖榴莲和一些特产的，也有小吃。打车直接去了升旗山缆车站，没有多停留。 双层观光巴士 上到山顶的缆车。这里的缆车很有特色，30RM往返，非常值得一试 升旗山 又名槟榔山（Penang Hill)，位于槟岛中部，主峰西方山（Western Hill）海拔833米，是槟城的最高点。 其中海拔735米（2,411英尺）的旗山（Flagstaff Hill）是升旗山群峰中被开发最多的山峰，也是当地居民和游客的避暑胜地。由于过去英国高官的别墅大多数在这里，山下的士兵利用旗语传递重要讯息，升旗山因而得名。 The top of the hill is accessible via the Penang Hill Railway from its base station at Hill Railway Station Road. To date, this funicular railway system is the only one of its kind in Malaysia, transporting over a million visitors to the peak of Penang Hill as of 2014. 缆车终点山顶的景区，下来就有好几个观光台。在槟城最高峰能俯瞰市区和槟威大桥，还有更远的北海。 游览图提供了几条线路，标注了大部分的景点。 印度教寺庙 广场周围有咖啡店和博物馆（猫头鹰博物馆、照相机博物馆） 转完一圈差不多也就是日暮了，回到观景平台等日落拍几张夜景，美滋滋。 下山回酒店，街上小走一会儿，买点东西。第二天认真逛下乔治市区。 晚饭就在汕头街吃了点炒棵条。那里的人都说的方言，确实很难懂。 Day 2George Town酒店门口拿一本地图，乔治市的景点基本都可以找到了。乔治市不大，景点基本步行到达。 wiki: 乔治市（George Town），为马来西亚槟城州的首府，位于槟岛东北角。槟岛是2010年马来西亚第二大城市[注 1]及第一大岛城。在2010年共有708，127人。而以乔治市为中心的大槟城都会区方面则有约两百五十万人，也是全国第二大的组合城市[6][7][8][9]。乔治市也是国内古老城镇之一，并在2008年7月7日正式列入联合国教科文组织世界文化遗产名录，形成了现今的古迹区[10]。乔治市是槟城州乃至整个北马区的政治、金融、旅游、文化和高等教育中心。 街头的马华选战海报 街头壁画无论在乔治市的哪里，在大楼的墙面，在店铺的门口，在哪个暗巷，都能看到各式各样的壁画。风情各异，画的东西也千奇百怪。 我拿到的地图提供了一些很多有名的壁画的地点，但有的由于装修或是别的原因已经看不到了，同时也有很多有趣的壁画它也没有收录。 乔治市是一个格局很小但是容量很大的城市，值得慢慢探索。随便走到一个小巷，都能发现让你惊喜的东西。 很想在这里度个半年的假。 街边小店 早上出门也是在一个小巷里吃的娘惹传统早餐，大概是鸡腿面线之类的。这家小店还有传统娘惹糕点买，早上吃不了那么多没有买，加上天气确实很热没什么食欲。 中午和晚上在槟城非常有名的小江豆浆吃的，点了炒蕊和冰豆浆。炒蕊味道偏平淡，和冰豆浆偏甜结合起来很消暑。正餐点的是泰餐，偏辣并且有非常奇异的清香。 炒蕊和冰豆浆。如果你只来一次槟城，一定要试一次。 沿着壁画分布较为集中的街道走完就差不多是东侧的海岸了，姓氏桥 就在这里。姓氏桥是早期南阳渔民定居处，是支向海的桥，方便他们泊船。现在还有侨民居住，只是现在被旅游开发，桥两侧多起了商店。最大的是姓周桥，旁边还有很多别的姓氏的桥。 姓周桥上买的榴莲雪糕，生化味道 桥头风景 街头建筑逛完后差不多往北侧走，就能看到市区内的建筑和一些景点 世界遗产楼。乔治市是世界遗产。 街头表演 消防局和警察局都有涂装的 Fire Station 警察局 午后的雨把我们逼到了咖啡馆。爱情巷（Love Lane）也是著名景点，这里各种主题的咖啡馆非常多。这间咖啡馆以wheeler为主题 人生就像骑自行车，为了保持平衡，你必须保持前行 我点了也很著名的槟城白咖啡的 魔改版本 ，也就是Blended + Fragged(沙冰+巧克力碎片)。非常好喝，喝完之前一直都有嚼的。 热带的雨一下就停了。 滨海的大道上有华盍街教堂和博物馆 槟城市政厅（MBPP），当时英殖民的风格，旁边有草坪广场，都在海边。不少带着孩子的家庭都在这里玩，很多小朋友在这里玩泡泡，笑得天真烂漫。图盗自我同伴 194255.jpg 旧关仔角钟楼 夜幕降下，继续看看市区的 马里安曼印度庙。市区内清真寺/回教堂也有不少。 马里安曼印度庙，槟城 小印度 附近 这是个晚上会诵经的清真寺 槟城最后一顿，吃了特产亚参叻沙（Laksa） 然后准备溜到吉隆坡了。]]></content>
      <tags>
        <tag>Trip</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[大马之行]]></title>
    <url>%2Fmyblog.github.io%2F%E5%A4%A7%E9%A9%AC%E4%B9%8B%E8%A1%8C%2F</url>
    <content type="text"><![CDATA[前言去马来西亚玩了四天，主要是体验人文。前两天槟城，后两天吉隆坡。 时逢马来西亚大选，也看到街上密集的选战旗帜了。 为什么会想去马来西亚呢 大概是因为便宜吧 马来西亚好玩吗 对第一次出国的我来说，马来西亚是体验异国人文的高性价比选择，所以我觉得很值得一去马来西亚是一个伊斯兰国家 。我在此之前对清真很反感，觉得到一个90％都是伊斯兰教徒的国家可能会有点失望的。结果确是很惊喜。 对马来西亚的印象 包容和多元之前觉得，包容和多元可以形容上海。去过大马之后，才发现上海和马来西亚相比，根本不能叫多元。这里有各种肤色的人在街头攒动，各种口音和语言交织在一起，各种风俗文化共存，却很少有冲突。拿槟城举例，乔治市遗产区老街有英殖民时期的建筑和教堂，也有清真寺在晚上诵经，街上各种各样老店不少打着中文招牌；有小印度和印度寺庙，也有海边的姓氏桥，它们是很早以前中国渔民下南洋定居的地方，还有更早的娘惹文化，小吃和博物馆。至于吉隆坡，更是如此了。这里不再是泥泞的河口，而是国际化的大城市。街上不只有亚洲面孔，其他大洲的面孔也非常多。随着各种民族定居，它们的文化传统也流了下来，在吉隆坡继续传承着。吉隆坡的华人街 茨厂街 旁边有佳美清真寺，有印度教神庙，也有关公庙。它们不冲突，也不极端。 印象最深的 这里的女性大部分带头巾，我还见到过只露出眼睛的那种。可能看到一个妹纸会去想要是她们不带头巾会不会很漂亮，会不会有很飘逸的头发。但是她们并不封建，或者说并不是那种传统意义上的封建。似乎任何职业都有他们的身影。有女警察，售货员，酒店前台小姐姐，等等。头巾并不会给你任何负面的印象，反而会慢慢习惯。虽然头巾限制了她们在头发上的发挥，但爱美和追求时尚仍然可行。 各种化妆品都有售卖，广告上的模特也戴着头巾。虽然上半身保留着传统，但是鲜艳前沿的鞋子和袜子展示着她们对时尚的理解。]]></content>
      <tags>
        <tag>Trip</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo 博文简单美化]]></title>
    <url>%2Fmyblog.github.io%2FHexo-%E5%8D%9A%E6%96%87%E7%AE%80%E5%8D%95%E7%BE%8E%E5%8C%96%2F</url>
    <content type="text"><![CDATA[文字背景色块添加打开themes/next/source/css/_custom 下的 custom.styl 文件,添加自定属性样式 1234567891011121314// 颜色块-黄span#inline-yellow &#123;display:inline;padding:.2em .6em .3em;font-size:80%;font-weight:bold;line-height:1;color:#fff;text-align:center;white-space:nowrap;vertical-align:baseline;border-radius:0;background-color: #f0ad4e;&#125; 想添加自定义颜色，修改最后的backgroud-color即可。 使用在md正文中如下格式： &lt;span id=&quot;inline-blue&quot;&gt; Text here &lt;/span&gt; 就可使用了。 效果： Text Text Text Text 使用FA图标在md正文中使用 &lt;i class=&quot;fa fa-subway&quot;&gt;&lt;/i&gt; 来调用FA图标。第二个fa后单词改为需要的图标名称即可。 改变大小：经过测试，有用的包括 1234&lt;i class="fa fa-camera-retro fa-lg"&gt;&lt;/i&gt;&lt;i class="fa fa-camera-retro fa-2x"&gt;&lt;/i&gt;&lt;i class="fa fa-camera-retro fa-3x"&gt;&lt;/i&gt;&lt;i class="fa fa-camera-retro fa-5x"&gt;&lt;/i&gt; 效果 Bootstrap Callout12345&#123;% note primary %&#125;primary&#123;% endnote %&#125;&#123;% note success %&#125;success&#123;% endnote %&#125;&#123;% note info %&#125;info&#123;% endnote %&#125;&#123;% note warning %&#125;warning&#123;% endnote %&#125;&#123;% note danger %&#125;danger&#123;% endnote %&#125; 效果： primary success info warning danger]]></content>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Trip to Malaysia]]></title>
    <url>%2Fmyblog.github.io%2FTrip-to-Mlaysia%2F</url>
    <content type="text"><![CDATA[Plan 槟城预计到达时间：11点 市区：步行，参考行程助手景点地图 升旗山/极乐寺 BUS http://www.rapidpg.com.my/journey-planner/route-maps 吉隆坡吉隆坡·攻略·交通 蓝色点：吉隆坡购物中心红色点：吉隆坡市区十大景点半透明圆形：500米的半径辐射 吉隆坡的轨道交通有6条线，分别是轻轨(LRT，包含安邦线Ampang Line &amp; Sri Petaling Line、格兰那再也线The Kelana Jaya Line，又称Putra Line）、单轨(MonoRail绿线)和电动火车(即KTM Komuter，红线&amp;蓝线)，轻轨与单轨均由MYrapid公司运营。市内景点较为密集且靠近站点附近，大部分景点可乘坐轨道交通步行到达。前往茨厂街，乘坐 Kelana Jaya Line (即轻轨LRT的格兰那再也线，往KLCC方向)，在Pasar Seni站下车后步行5分钟左右，其内的景点亦可步行到达。前往双子塔同样乘坐 Kelana Jaya Line 线，在KLCC站下车即可，前往吉隆坡塔乘坐单轨电车 MonoRail到Raja Chulan站下车步行。 ​ 茨厂街(2小时) 步行10分钟 马里安曼印度庙(1小时) 步行2分钟 关帝庙(20分钟) 地铁20分钟 国家石油公司双子塔(2小时) 地铁20分钟 阿罗街(1小时) 国家清真寺(1.5小时) 步行5分钟 城市长廊(30分钟) 步行3分钟 独立广场(1小时) 步行5分钟 苏丹阿都沙末大厦(1小时) 步行2分钟 佳密清真寺(1小时) ​]]></content>
      <tags>
        <tag>Trip</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[My first post]]></title>
    <url>%2Fmyblog.github.io%2FMy-first-post%2F</url>
    <content type="text"><![CDATA[Hello World! 我迁移到这里啦之前CSDN的文章、微信公众号的文章会慢慢迁移过来。 CSDN多是技术方面的文章，微信上面个人体验和测评和扯淡比较多。有时候还会发知乎专栏等等，但是没有一个统一的平台来做一些管理。以后主要一些随笔和文章就发表在这里了。 Markdown语法的支持变得愈发重要，微信公众号不支持Markdown语法，迁移过来会稍微费事一点。以后一般都用MD写作，所以统一在这里发布了。 同时最近有了一个小相机也慢慢去了不少地方了。网上图片社区也不是很喜欢，等找到好的图床，拍的照片会慢慢传上来。 个人博客和域名这个博客是基于Hexo和Github搭建的，大概半天就配置好了，其实挺方便的。有空会慢慢加上新的功能，比如评论系统和RSS。 由于Github时常抽风，在考虑购买一个非.cn的域名。各位有要转让的域名可以联系我。预算有限。 这里就可以为所欲为地发文章了。 嗯。 没有CSDN的原创核审，没有微信的和谐。 联系我其实主页是有About的我还没有写。 chaolinhan@gmail.com executer@qq.com]]></content>
      <tags>
        <tag>Writings</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[cx_Freeze发布Python程序的一些经验]]></title>
    <url>%2Fmyblog.github.io%2Fcx_Freeze%E5%8F%91%E5%B8%83Python%E7%A8%8B%E5%BA%8F%E7%9A%84%E4%B8%80%E4%BA%9B%E7%BB%8F%E9%AA%8C%2F</url>
    <content type="text"><![CDATA[前言最近用Python写了一个化工方面的辅助计算软件，使用PyQt实现界面，同时用了很多库来实现作图和科学计算、求解等功能。使用界面与逻辑分离的方法，画好UI再编码具体功能。这次规模比第一次写的PyQt+SQL的单一界面复杂很多，在打包发布时遇到的问题也是非常多，一方面代码量非常大，另一方面涉及到的库非常多。 pyinstaller和cx_Freeze的对比之前用pyinstaller打包，遇到的问题也就是decimal的问题，属于隐藏的库的没有导入，这次由于库太多，用pyinstaller打包的时候单个程序出来大概60M，而且打开极慢。同时根据报错来看，pyinstaller并非支持所有库，有的库无法打包发布，比如这次程序使用的scipy。于是采用了cx_Freeze来打包。虽然理论上来讲是可以成功打包的，但是由于这个工具的简单性导致了一系列error。 matplotlib，numpy，scipymatplotlib库在导入时会出现报错，这是因为它的作图依赖于tkinter，cx_Freeze打包不会将它直接包括； 123os.environ['TCL_LIBRARY'] = '*\\Python36-32\\tcl\\tcl8.6'os.environ['TK_LIBRARY'] = '*\\Python36-32\\tcl\\tk8.6'# *处为Python目录位置，反斜杠依然两个 numpy.core._methods无法找到的报错：options里面includes： 1'includes': ['numpy.core._methods'] 程序中使用from … import … ，cx_Freeze打包可能出现库导入不完全的情况，即是看报错信息，没有什么module，在程序中import all或者在setup中include： 1'packages':['scipy', 'numpy', 'matplotlib', 'tkinter'] 目前Python 3.6里面包括的tk导入会出现dll错误：ImportError: DLL load failed，这个和cx_Freeze自身有关，需要include： 12'include_files': ['*\\Python36-32\\DLLs\\tk86t.dll'],# *处为Python目录位置，反斜杠依然两个 使用绝对位置的资源文件： 1include_files=[&apos;1.png&apos;, &apos;2.png&apos;, &apos;bg.png&apos;, &apos;bg1.png&apos;] buildbuild文件夹包含了所有的要用到的编译好的库文件，文件结构决定了程序运行非常快，基本能秒开了。 setup.py仅供参考。比较麻烦的几个库都用了，没用这些应该会简单很多。 1234567891011121314151617181920212223242526272829from cx_Freeze import setup, Executableimport sysimport osos.environ['TCL_LIBRARY'] = 'C:\\Users\\Chaolin Han\\AppData\\Local\\Programs\\Python\\Python36-32\\tcl\\tcl8.6'os.environ['TK_LIBRARY'] = 'C:\\Users\\Chaolin Han\\AppData\\Local\\Programs\\Python\\Python36-32\\tcl\\tk8.6'base = 'WIN32GUI' if sys.platform == "win32" else Noneexecutables = [Executable("Main_new.py", base=base)]packages = []include_files=['1.png', '2.png', 'bg.png', 'bg1.png']options = &#123; 'build_exe': &#123; 'packages':['scipy', 'numpy', 'matplotlib', 'tkinter'], 'include_files': ['C:\\Users\\Chaolin Han\\AppData\\Local\\Programs\\Python\\Python36-32\\DLLs\\tcl86t.dll', 'C:\\Users\\Chaolin Han\\AppData\\Local\\Programs\\Python\\Python36-32\\DLLs\\tk86t.dll'], 'includes': ['numpy.core._methods'] &#125;,&#125;setup( name = "Prog", options = options, version = "1.0", description = 'desc of program', executables = executables)]]></content>
      <tags>
        <tag>Python</tag>
        <tag>PyQt</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PyQt5 多窗口连接]]></title>
    <url>%2Fmyblog.github.io%2FPyQt5%20%E5%A4%9A%E7%AA%97%E5%8F%A3%E8%BF%9E%E6%8E%A5%2F</url>
    <content type="text"><![CDATA[前言之前做过pyqt的一个简单界面，在一个窗口（MainWindow）中实现一些操作；之前嫌麻烦没有去做多窗口和它们的切换功能。最近研究了下窗口的调用和切换。pyqt4和5有很多不同，在参考别人案例的时候走了很多弯路，最后在pyqt5下实现了简洁的多窗口切换为大家参考。 思路多窗口的切换和显示连接到按钮的信号上再进行show（）就行，格式上有别于pyqt4。一个逻辑比较清晰的解决方案是，使用一个主程序，在其中实例化各个窗口，然后定义它们的显示逻辑即是按钮的槽函数。格式上稍有不对就会报错，也是让我重新审视了一下python类和继承的语法= =同时窗口的类型也和pyqt4有所不同，pyqt5下QWidgets为主，与4中QDialog显示方式也有所不同。具体方式见代码。 代码主程序——实例化各个窗口1234567891011121314151617181920212223242526272829303132333435from PyQt5 import QtCore, QtGui, QtWidgetsfrom test import Ui_Dialogfrom Login import Ui_MainWindow_Loginclass Ui_Dialog(QtWidgets.QWidget,Ui_Dialog): def __init__(self): super(Ui_Dialog,self).__init__() self.setupUi(self) #定义登出按钮的功能 def logoutEvent(self): self.hide() #隐藏此窗口 self.log = loginWindow() self.log.show() #显示登录窗口 #必须加上selfclass loginWindow(QtWidgets.QMainWindow,Ui_MainWindow_Login): def __init__(self): super(loginWindow,self).__init__() self.setupUi(self) #定义登录按钮的功能 def loginEvent(self): self.hide() self.dia = Ui_Dialog() self.dia.show() #self.dia.exec_() #pyqt5下show()方法有所改变，不再使用exec_()方法。#运行窗口Loginif __name__=="__main__": import sys app=QtWidgets.QApplication(sys.argv) login_show=loginWindow() login_show.show() sys.exit(app.exec_()) 多窗口需要用到的多个窗口可以用Designer直接生成，主窗口实例化。在其中定义好信号连接即可 12345678910111213141516from PyQt5 import QtCore, QtGui, QtWidgetsclass Ui_MainWindow_Login(object): def setupUi(self, MainWindow_Login): #略 def retranslateUi(self, MainWindow_Login): #略 if __name__=="__main__": import sys app=QtWidgets.QApplication(sys.argv) widget = QtWidgets.QMainWindow() login = Ui_MainWindow_Login() login.setupUi(widget) widget.show() sys.exit(app.exec_()) 效果点击登陆：退出登录则返回到第一个窗口。 切换理解好这个实例后，添加更多窗口都是线性复杂度的操作，在Designer中设计好窗口，直接转码后就可在主程序中实例化该窗口并设计它们的显示逻辑。]]></content>
      <tags>
        <tag>Python</tag>
        <tag>PyQt</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PyQt5+python+数据库可视化操作界面]]></title>
    <url>%2Fmyblog.github.io%2F%E5%9F%BA%E4%BA%8EPyQt5%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8F%AF%E8%A7%86%E5%8C%96%E6%93%8D%E4%BD%9C%E7%95%8C%E9%9D%A2%2F</url>
    <content type="text"><![CDATA[前言这是我python入门写的第一个项目，从前天晚上开始构思到今天做了第一个Release。这两天时间做了读了Qt库和pymssql的不少文档，边学边做写了一个可视化窗口实现数据库的操作。对PyQt的理解也就限于槽和信号沟通环节，pymssql主要是连接部分，并未过多涉及。内容为医院挂号系统，基本实现和练习了增删查改操作。介绍环境和配置上的操作以及搭建经验。 PyQt5环境参考PyQt5+python3+pycharm开发环境配置集成了PyUIC和QtDeisgner。其中Designer跨语言，可以画一些简单的窗口和控件，输出.ui格式的文件，利用PyUIC转码为.py进行编辑。PyQt库非常庞大，但我实际操作主要聚焦于控件的方法和定义。Qt的参考文档为C++环境，结合Pycharm自动补全基本可以避开转换的问题。可以看到MainWindow代码很长，但大部分都是ui文件转码自动生成的（retranslateUi、setupUi），实际需要编写的就是逻辑和实现部分。 数据库连接由于要求和环境的限制，我使用了SQL server 2012。MySQL,SQLite等连接更为简洁方便。选用的库为pymssql，参考官方文档pymssql连接方面，需要首先登陆SQL Management Studio以管理员身份，然后设置中添加用于该项目连接的用户并给它授权。授权选项中我是全部勾选。然后在其中建好设计好的两个表Doctor（用于检索医生）和Reg（用于前端操作）注意设计时，将varchar()数据类型更改为nvarcahar,便于中文输入输出，同时连接时采用utf8字集： 12345server = "DESKTOP-9RUT87E"user = "Hospital"password = "123456"#print('Connecting to MSSQL...')conn = pymssql.connect(server, user, password, database="Hospital", charset='utf8') 之后阅读学习python中获取光标进行简单的数据库操作，即可实现在程序中实现数据库操作了，可以参考pymaasql的example。 Python编辑本项目的意义在于简单的图像化操作代替数据库语言来实现数据的增删查改。考虑到绘制的问题，采用的简单的单一界面交互。对于多界面交互则需要绘制多个ui文件并在主程序中调用。 QtDesigner绘界面 非常方便地从左侧选取想要加入的元素，右侧属性栏也可以很好地自定义。对应生成了retranslateUi、setupUi中的代码，参考意义不大故移入附录。 转码为.py文件进行编辑 若搭建好开发环境，可直接从Pycharm中选择外部工具对ui文件转码，或是直接文件夹下shift+右键打开cmd调用pyuic转码。 由于 QtDesigner提供的信号和槽连接非常简单而且多数需要实现的功能为SQL连接和操作，故需要自定信号和槽函数来实现这些按钮，所以转码后在IDE中进行编写。 熟悉了PyQT空间的语法和事件命名方式后，就可以轻松写出自定槽函数来接受按钮信号，同时获取和改变它们的各种状态。有空会写PyQt常见类的常见操作供交流。接下来就是由设计的界面、数据库结构设计交互逻辑并实现。 交互设计窗口的交互分了7个按钮，交互逻辑如下 查询在岗医生根据科室和是否专家查询可用的医生 挂号挂号需要提供个人信息，同时根据需要挂的科室，可执行上一步操作，选择合适的医生，填入医生号码进行挂号 截图：此时点击挂号即可完成挂号其中1、2两步顺序随意。 查、删、改根据提供的信息构建操作来实现，要注意到这些信息并不是全部需要，例如可以查询急症科的所有病人，也可以查询具体的某一个人 例：查询急症科的男病人 记录日志简单的文件写入操作 保存的log： 实现 按钮槽函数的编写DB_开头的函数为自定槽函数，用于响应按钮点击的事件。同时需要一些自定辅助函数和全局变量用于系统状态的维护。编写思路见代码注释。 引用并执行编写HospitalRegSys.py作为主程序来调用编写好的ui转码而来的文件，实现主程序和UI界面代码的分离，也方便添加多个界面。 12345678910111213141516# HospitalRegSys0045.pyfrom PyQt5 import QtCore, QtGui, QtWidgetsfrom MainWindow import Ui_MainWindowimport decimalclass mwindow(QtWidgets.QMainWindow,Ui_MainWindow): def __init__(self): super(mwindow,self).__init__() self.setupUi(self)if __name__=="__main__": import sys app=QtWidgets.QApplication(sys.argv) mshow=mwindow() mshow.show() sys.exit(app.exec_()) 主窗口代码 12# 不再提供# No avilable now pyinstaller生成可执行文件生成exe的时候遇到了很多困难，和python3.6环境以及pymssql、pyinstaller设置的参数有关。经过多次测试和参考官方文档，在cmd中执行程序，根据报错“没有找到模块XXX”，直接在主程序中引入该模块即可，即是 12import decimal# import的具体模块和报错缺少的模块有关 这个模块和_mssql有关，可见库和环境的不兼容性。 附录数据库结构 retranslateUi、setupUi代码只需编辑setupUi最后连接部分的信号，以实现按钮的功能。12# 不再提供# No avilable now RefPyQt5 Reference Guidepymssql]]></content>
      <tags>
        <tag>Python</tag>
        <tag>PyQt</tag>
        <tag>Database</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[写在年末——聚合类应用趋势]]></title>
    <url>%2Fmyblog.github.io%2F%E5%86%99%E5%9C%A8%E5%B9%B4%E6%9C%AB%E2%80%94%E2%80%94%E8%81%9A%E5%90%88%E7%B1%BB%E5%BA%94%E7%94%A8%E8%B6%8B%E5%8A%BF%2F</url>
    <content type="text"><![CDATA[纵观现在的IT，信息爆炸、信息过剩都是不可避免的话题。我们处在一个“信息爆炸”的时代，这句话很多年前就提起过，但现在爆炸完全没有坍缩的痕迹，反而信息过剩更加严重。 多年前的生活很简单，能每天读读报纸就算很“关心”身边的信息了；很多的事情，很多的内容，少有人去发觉，更少有去传播。而借互联网之力，信息服务日益强大，身边各种各样的事情会快速传播，也有越来越多的精品优质内容被人们创作出来。 信息过剩的时候，你读着来自各个应用的信息，追着各种各样的新闻，讨论着各种各样的轶事，却少有自己的存在感；越是感觉自己关注世界，却越是孤独。 聚合类应用旨在选出符合你的兴趣，或是最具代表性，最有价值的文章呈现给用户；最近借着深度学习和AI的东风迅速发展。相信很多人会装很多个app却很少打开，觉得留着占空间，删了又不舍得；或是每天睡觉前刷一遍行业动态or湾区新闻之类的，挨着打开各个app。就我而言，常年关注科技类新闻；我经常看的媒体app包括但不限于：AppSo，ZEALER, Engadget, The Verge, IT之家，爱范儿，果壳，知乎（日报），数字尾巴，少数派；其他的日常新闻类app也有不少；手机就算塞下了这些所以app，它们的效率也很低：能真正读到特定app的有意义的内容在少数情况。 讲了这么多，下面是我个人观点。大胆预测app的一个趋势：聚合类型发展。现在的微信做了小程序，支付宝做了商家app接入，都是很有前瞻性的做法；我在6，7年前智能手机刚兴起时就看中了一个别具一格的新闻类型app：ZAKER。我从它的测试版用户到现在看着它发展成熟，也觉得聚合类app的趋势正在整个信息服务领域是必然趋势；现在越来越多的新闻app开始采用聚合形式，也大胆地开始运用机器学习、AI等先进技术，它们提供的内容针对性强，在信息规模大、碎片化的背景下对我们而言效率极高。 RSS无疑是一个先例，后来RSS倒下了。聚合类app核心在于抓取、爬虫等获得各媒体主要咨询，经过人工编辑，人为调整影响因子或是深度学习用户的阅读习惯、阅读兴趣之后将内容按照一定的顺序呈现出来。技术不难，难的是内容的抓取和筛选的界限。 接下来是我个人深度试用过的聚合类app推荐。它们各有各的特色。 轻芒阅读（原豌豆荚一览），以及轻芒杂志这个应用可以直接阅读很多app的内容，无须因为想获取资讯而去安装它们；也可以按照瀑布流的形式呈现各个app在时间线上的推送资讯。聚合类应用的老大哥吧。 ZAKER聚合类新闻app，可以像RSS一样订阅许多网站和app的内容，是我的主力新闻应用。但是（由于一些不可描述）它又先前的爬虫获取变成的编辑审阅，很多国外资源因此gg，可惜了这个平台。新闻首推之选。 即刻重点在于推送。 期待每一次推送 信息过载的今天，获取有效资讯正变得越来越累。不妨换一种轻盈、高效、省心的方式，与你感兴趣的信息相遇。 在「即刻」，轻松发现、关注你感兴趣的主题，第一时间收到量身定制的更新提醒。「即刻」开始，只看你想看。 NewsfoldFeedly类RSS抓取应用，符合MD，美。 微博，微信之类的推送，都有聚合的效果，但恐怕阅读效率不及专门的聚合app。 以上。同时发布于我个人运维的公众号和我的知乎专栏，转载请联系。]]></content>
      <tags>
        <tag>Writings</tag>
      </tags>
  </entry>
</search>
